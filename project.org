#+AUTHOR: Markus Rother

** ideas
 Instead of suspending listeners, I could also create MouseAdapters
 for each component which manage state and do not forward events
 unless state criteria is met!  dispatchEvent(e) would have to be
 overwritten in that component. I would state-dependent dispatch to
 selected listeners only. 
 One could randomly add listeners and never worry about suspending them any more.

** packages
   + .pned.gui
   + .pned.gui.components
   + .pned.gui.components.dialogs
   + .pned.gui.components.menus
   + .pned.gui.components.listeners
   + .pned.gui.control
   + .pned.gui.control.commands
   + .pned.gui.control.events
   + .pned.gui.control.requests
   + .pned.gui.core
   + .pned.gui.core.model
   + .pned.gui.actions
   
   + .pned.control
   + .pned.control.commands
   + .pned.control.events
   + .pned.control.requests
   + .pned.io
   + .pned.core
   + .pned.core.model
   
   + .pned.util
   
   + .concurrent
   + .util
   + .swing

** TODO
+ File not found may still crash
+ AbstractCreateNodeAction and subclasses
+ Refactor selection

