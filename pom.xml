<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <!-- PROJECT -->
  <groupId>de.markusrother</groupId>
  <artifactId>pned-gui</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>pned</name>
  <url>http://maven.apache.org</url>


  <!-- PROPERTIES -->
  <properties>
    <final.name>8544832_rother_markus</final.name>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.7</java.version>
    <junit.version>4.11</junit.version>
    <hamcrest.version>1.3</hamcrest.version>
    <mockito.version>1.10.17</mockito.version>
    <qdox.version>2.0-M3</qdox.version>
    <maven.compiler.plugin.version>3.2</maven.compiler.plugin.version>
    <maven.javadoc.plugin.version>2.10.1</maven.javadoc.plugin.version>
    <maven.jar.plugin.version>2.5</maven.jar.plugin.version>
    <level>private</level><!-- maven-javadoc-plugin goal:fix -->
    <defaultAuthor>Markus Rother</defaultAuthor><!-- maven-javadoc-plugin -->
    <defaultVersion>1.0</defaultVersion><!-- maven-javadoc-plugin -->
  </properties>


  <!-- DEPENDENCIES -->
  <dependencies>

    <!-- TESTING -->

    <!-- junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- hamcrest -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- mockito -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.thoughtworks.qdox</groupId>
      <artifactId>qdox</artifactId>
      <version>${qdox.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>


  <!-- BUILD -->
  <build>

    <!-- PLUGINS -->
    <plugins>

      <!-- maven-compiler-plugin -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <!-- maven-javadoc-plugin -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <show>private</show>
        </configuration>
        <executions>
          <execution>
            <id>aggregate</id>
            <goals>
              <goal>aggregate</goal>
            </goals>
            <phase>site</phase>
          </execution>
        </executions>
      </plugin>

      <!-- mavaen-jar-plugin -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
	<configuration>
	  <archive>
	    <manifest>
	      <mainClass>de.markusrother.pned.gui.Main</mainClass>
	    </manifest>
	  </archive>
          <finalName>${final.name}</finalName>
	</configuration>
      </plugin>
      
      <!-- exec-maven-plugin -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <executions>
          <execution>
            <id>Create src and javadoc archive</id>
            <phase>site</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${basedir}</workingDirectory>
              <executable>zip</executable>
              <arguments>
                <argument>-r</argument>
                <argument>${project.build.directory}/8544832_rother_markus.zip</argument>
                <argument>./target/site/apidocs</argument>
                <argument>./src/main/java</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>Copy manual to target</id>
            <phase>site</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${basedir}</workingDirectory>
              <executable>cp</executable>
              <arguments>
                <argument>./src/main/resources/manual.pdf</argument>
                <argument>${project.build.directory}/8544832_rother_markus.pdf</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
    
  </build>
  
</project>
